package ${package}.${moduleName}.controller;

import java.util.Arrays;
import java.util.Map;
import java.util.List;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import ${package}.${moduleName}.entity.${className}Entity;
import ${package}.${moduleName}.service.${className}Service;
import ${mainPath}.common.utils.PageUtils;
import ${mainPath}.common.utils.Result;



/**
 * ${comments}
 *
 * @author ${author}
 * @date ${datetime}
 */
@RestController
@RequestMapping("${moduleName}/${pathName}")
@Api(tags = "${comments}相关")
public class ${className}Controller {

    private final ${className}Service ${classname}Service;

    @Autowired
    public ${className}Controller(${className}Service ${classname}Service)
    {
        this.${classname}Service = ${classname}Service;
    }

    /**
     * 页面
     */
    @PostMapping("/page")
    @RequiresPermissions("${moduleName}:${pathName}:page")
    @ApiOperation(value = "查询${comments}列表")
    public Result page(@RequestBody Map<String, Object> data){
        PageUtils page = ${classname}Service.queryPage(data);

        return Result.ok().put("page", page);
    }

    /**
     * 列表
     */
    @PostMapping("/list")
    @RequiresPermissions("${moduleName}:${pathName}:list")
    @ApiOperation(value = "查询${comments}列表")
    public Result list(@RequestBody Map<String, Object> data){
        List<${className}Entity> list = ${classname}Service.queryList(data);

        return Result.ok().put("list", list);
    }

    /**
     * 信息
     */
    @GetMapping("/info/{${pk.attrname}}")
    @RequiresPermissions("${moduleName}:${pathName}:info")
    @ApiOperation(value = "根据ID获取${comments}详情")
    public Result info(@PathVariable("${pk.attrname}") ${pk.attrType} ${pk.attrname}){
		${className}Entity ${classname} = ${classname}Service.getById(${pk.attrname});

        return Result.ok().put("${classname}", ${classname});
    }

    /**
     * 保存
     */
    @PostMapping("/save")
    @RequiresPermissions("${moduleName}:${pathName}:save")
    @ApiOperation(value = "保存${comments}信息")
    public Result save(@RequestBody ${className}Entity ${classname}){
		${classname}Service.save(${classname});

        return Result.ok();
    }

    /**
     * 修改
     */
    @PostMapping("/update")
    @RequiresPermissions("${moduleName}:${pathName}:update")
    @ApiOperation(value = "更新${comments}信息")
    public Result update(@RequestBody ${className}Entity ${classname}){
		${classname}Service.updateById(${classname});

        return Result.ok();
    }

    /**
     * 删除
     */
    @PostMapping("/delete")
    @RequiresPermissions("${moduleName}:${pathName}:delete")
    @ApiOperation(value = "根据ID删除${comments}信息")
    public Result delete(@RequestBody ${pk.attrType}[] ${pk.attrname}s){
		${classname}Service.removeByIds(Arrays.asList(${pk.attrname}s));

        return Result.ok();
    }

}
